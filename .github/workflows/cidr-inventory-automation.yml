name: CIDR Inventory Automation

on:
  push:
    branches:
      - master  # Trigger the workflow on pushing to the main branch

jobs:
  cidr_inventory_automation:
    runs-on: ubuntu-latest  # Use Ubuntu for the workflow runner

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'  # Set your desired Python version

    # Step 3: Install dependencies (assuming you have a requirements.txt with dependencies)
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # Ensure your Python dependencies are installed

    # Step 4: Run dynamic-subnet-calc.py to create subnets.csv
    - name: Run dynamic-subnet-calc.py to create subnets.csv
      run: |
        python dynamic-subnet-calc.py  # Adjust this if the script location is different
    
    # Step 5: Upload subnets.csv as artifact
    - name: Upload subnets.csv as artifact
      uses: actions/upload-artifact@v3
      with:
        name: subnets-csv
        path: subnets.csv

    # Step 6: Download subnets.csv artifact for further processing
    - name: Download subnets.csv artifact
      uses: actions/download-artifact@v3
      with:
        name: subnets-csv

    # Step 7: Run clean_up_csv_file.py to create cleaned_subnets.csv
    - name: Run clean_up_csv_file.py to create cleaned_subnets.csv
      run: |
        python clean_up_csv_file.py  # Adjust this if the script location is different
    
    # Step 8: Upload cleaned_subnets.csv as artifact
    - name: Upload cleaned_subnets.csv as artifact
      uses: actions/upload-artifact@v3
      with:
        name: cleaned-subnets-csv
        path: cleaned_subnets.csv

    # Step 9: Download cleaned_subnets.csv artifact for further processing
    - name: Download cleaned_subnets.csv artifact
      uses: actions/download-artifact@v3
      with:
        name: cleaned-subnets-csv

    # Step 10: Run csv_to_html_converter.py to create subnets.html
    - name: Run csv_to_html_converter.py to create subnets.html
      run: |
        python csv_to_html_converter.py  # Adjust this if the script location is different
    
    # Step 11: Upload subnets.html as artifact
    - name: Upload subnets.html as artifact
      uses: actions/upload-artifact@v3
      with:
        name: subnets-html
        path: subnets.html

    # Step 12: Upload the HTML to Confluence
    - name: Upload HTML to Confluence
      run: |
        python upload_confluence.py  # Ensure this script uploads subnets.html to Confluence
      env:
        CONFLUENCE_API_TOKEN: ${{ secrets.CONFLUENCE_API_TOKEN }}
        CONFLUENCE_USERNAME: ${{ secrets.CONFLUENCE_USERNAME }}
